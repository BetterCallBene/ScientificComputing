
h = 1.0/4.0; 
N = (int) (1.0/h + 1.0);

	int iK = pow(N-1, 2);

	Matrix A(iK, iK);

	int curElm = 0;
	int lastElm = (N-2);

	for(int i = 0; i < (N-1); i++)
	{
		North =(i != 0);
		South = (i != lastElm);
		for(int j= 0; j < (N-1); j++)
		{
			West = (j != 0);
			East = (j != lastElm);

			curElm = i * (N-1) + j;	
			A.addValue(curElm, curElm, 4);
			if(West)
				A.addValue(curElm,  curElm-1, -1);
			if(East)
				A.addValue(curElm,  curElm+1, -1);
			if(South)
				A.addValue(curElm, curElm + lastElm, -1);
			if(North)
				A.addValue(curElm, curElm - lastElm, -1);
			
		}
	}